{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Archive","text":"<p>For new blogs visit schadokar.dev.</p> <p>Hey folks,</p> <p>I am Shubham Chadokar, a Software Engineer. I've set up this website to give a new home to my old, outdated, and less searchable articles. My goal is to keep my main blog fresh and relevant for all you wonderful readers out there. Thanks for joining me on this tidying-up adventure!</p>"},{"location":"#connect-with-me","title":"Connect with me","text":"<p>Checkout my work on different platforms and lets connect</p> <ul> <li>Mail</li> <li>Linkedin</li> <li>Medium</li> <li>GitHub</li> <li>Twitter</li> </ul>"},{"location":"2020/check-if-key-exists-in-map-in-golang/","title":"Check if Key Exists in Map in Golang","text":"","tags":["golang"]},{"location":"2020/check-if-key-exists-in-map-in-golang/#map","title":"Map","text":"<p>Map is a data structure which implements a hash table.</p> <p>Map is a simple key-value storage. Map offers fast lookups, adds and deletes.</p>","tags":["golang"]},{"location":"2020/check-if-key-exists-in-map-in-golang/#zero-value-table","title":"Zero Value Table","text":"<p>Map don't explicitly check if a key is created or not, instead if a key doesn't exists it returns the default value of value type.</p> <p>Data type and their Default Value</p> Type Default Value Numeric type(int, float) 0 Boolean false String \"\" (empty string) <p>For Ex.</p> <pre><code>package main\n\nimport \"fmt\"\n\nfunc main() {\n    m1 := map[string]int{\n        \"a\": 1}\n    m2 := map[string]bool{\n        \"a\": true,\n    }\n\n    fmt.Printf(\"Value of key 'a' is %v\\nValue of key 'b' is %v\\n\", m1[\"a\"], m1[\"b\"])\n    fmt.Printf(\"Value of key 'a' is %v\\nValue of key 'b' is %v\\n\", m2[\"a\"], m2[\"b\"])\n}\n</code></pre> <p>Output</p> <pre><code>Value of key 'a' is 1\nValue of key 'b' is 0\nValue of key 'a' is true\nValue of key 'b' is false\n</code></pre>","tags":["golang"]},{"location":"2020/check-if-key-exists-in-map-in-golang/#check-if-key-exist-in-a-map-or-not","title":"Check if key exist in a map or not","text":"<p>When value of the key is retrived from the map, it also returns a boolean value.</p> <p>It is a widely used practice in golang to name <code>ok</code> to the boolean argument.</p> <pre><code>package main\n\nimport \"fmt\"\n\nfunc main() {\n    m1 := map[string]int{\n        \"a\": 1,\n        \"b\": 2,\n    }\n\n    value, ok := m1[\"a\"]\n\n    fmt.Printf(\"Key 'a' exists %v and its value is %v\\n\", ok, value)\n\n    _, ok = m1[\"c\"]\n\n    fmt.Printf(\"Key 'c' exists %v\\n\", ok)\n}\n</code></pre> <p>Output</p> <pre><code>Key 'a' exists true and its value is 1\nKey 'c' exists false\n</code></pre>","tags":["golang"]},{"location":"2020/check-if-key-exists-in-map-in-golang/#final-words","title":"Final Words","text":"<p>Map is a very powerful data structure. If order is not required then prefer map to array.</p>","tags":["golang"]},{"location":"2020/check-number-in-the-string-in-golang/","title":"Check if a character is a number in Golang","text":"<p>Unicode is a computing standard for the consistent encoding symbols.</p> <p>All the characters and symbols assigned a code.</p> <p>For ex.</p> <pre><code>A U+0041\n\u0905 U+0905\n</code></pre> <p>All the Unicode is divided into various categories. Browse all the categories.</p> <ul> <li>Ll Lowercase Letters (a, b, \u00b5, \u0278)</li> <li>Nl Letter Number (\u2160, \u16ef)</li> <li>Lo Other Letter (\u0905, \u01bb)</li> </ul> <p>Golang package <code>unicode</code> provides a wide range of validation methods on different set of Unicode.</p>","tags":["golang"]},{"location":"2020/check-number-in-the-string-in-golang/#isnumber","title":"IsNumber","text":"<p><code>IsNumber</code> function validates the set of Unicode number characters, category N(Nd, Nl, No).</p> <p>Syntax</p> <pre><code>func IsNumber(r rune) bool\n</code></pre> <pre><code>package main\n\nimport (\n    \"fmt\"\n    \"unicode\"\n)\n\nfunc main() {\n    str := \"1b\u0967\u2160\u00bc\"\n    for _, char := range str {\n        if unicode.IsNumber(char) {\n            fmt.Println(string(char), char, \"is number rune\")\n        } else {\n            fmt.Println(string(char), char, \"is not a number rune\")\n        }\n    }\n}\n</code></pre> <p>Output</p> <pre><code>1 49 is number rune\nb 98 is not a number rune\n\u0967 2407 is number rune\n\u2160 8544 is number rune\n\u00bc 188 is number rune\n</code></pre> <p>Try it</p>","tags":["golang"]},{"location":"2020/check-number-in-the-string-in-golang/#isdigit","title":"IsDigit","text":"<p><code>IsDigit</code> function validates only the <code>Nd</code> Unicode category. It is a subset of <code>IsNumber</code>.</p> <p>Syntax</p> <pre><code>func IsDigit(r rune) bool\n</code></pre> <pre><code>package main\n\nimport (\n    \"fmt\"\n    \"unicode\"\n)\n\nfunc main() {\n    str := \"1b\u0967\u2160\u00bc\"\n\n    for _, char := range str {\n        if unicode.IsDigit(char) {\n            fmt.Println(string(char), char, \"is digit rune\")\n        } else {\n            fmt.Println(string(char), char, \"is not a digit rune\")\n        }\n    }\n}\n</code></pre> <p>Output</p> <pre><code>1 49 is digit rune\nb 98 is not a digit rune\n\u0967 2407 is digit rune\n\u2160 8544 is not a digit rune\n\u00bc 188 is not a digit rune\n</code></pre>","tags":["golang"]},{"location":"2020/check-number-in-the-string-in-golang/#final-words","title":"Final Words","text":"<p>You can always use a validation on ASCII values. ASCII value of <code>0</code> is <code>30</code> and <code>9</code> is <code>39</code>. If <code>&gt;=</code> 30 and <code>&lt;=</code> 39.</p>","tags":["golang"]},{"location":"2020/convert-hex-to-byte-and-byte-to-hex-in-golang/","title":"Convert Byte to Hex and Hex to Byte in Golang","text":"<p>In this post of to-the-point series, we will convert a hex string to a byte array and vice-versa. For this, we're going to use the <code>encoding/hex</code> package provided by the golang. Package <code>hex</code> implements hexadecimal encoding and decoding.</p>","tags":["golang","to-the-point","conversion"]},{"location":"2020/convert-hex-to-byte-and-byte-to-hex-in-golang/#byte-array-to-hex-string","title":"byte array to hex string","text":"<p>To convert a byte array to hex string, we will encode the byte array to the hexadecimal string.</p>","tags":["golang","to-the-point","conversion"]},{"location":"2020/convert-hex-to-byte-and-byte-to-hex-in-golang/#syntax","title":"Syntax","text":"<pre><code>func EncodeToString(src []byte) string\n</code></pre> <p>First we will convert a string to a byte array.</p> <pre><code>package main\n\nimport (\n    \"encoding/hex\"\n    \"fmt\"\n)\n\nfunc main() {\n    byteArray := []byte(\"Learn Go!\")\n    fmt.Println(\"byteArray: \", byteArray)\n\n    encodedString := hex.EncodeToString(byteArray)\n\n    fmt.Println(\"Encoded Hex String: \", encodedString)\n}\n</code></pre> <p>Output</p> <pre><code>byteArray: [76 101 97 114 110 32 71 111 33]\nEncoded Hex String: 4c6561726e20476f21\n</code></pre> <p>Try it</p>","tags":["golang","to-the-point","conversion"]},{"location":"2020/convert-hex-to-byte-and-byte-to-hex-in-golang/#hex-string-to-byte-array","title":"hex string to byte array","text":"<p>To convert hex string to byte array, we will decode the encoded hex string.</p>","tags":["golang","to-the-point","conversion"]},{"location":"2020/convert-hex-to-byte-and-byte-to-hex-in-golang/#syntax_1","title":"Syntax","text":"<pre><code>func DecodeString(s string) ([]byte, error)\n</code></pre> <p>We are going to use the same hex string from above.</p> <pre><code>package main\n\nimport (\n    \"encoding/hex\"\n    \"fmt\"\n)\n\nfunc main() {\n    hexString := \"4c6561726e20476f21\"\n\n    fmt.Println(\"Hex String: \", hexString)\n\n    decodedByteArray, err := hex.DecodeString(hexString)\n\n    if err != nil {\n        fmt.Println(\"Unable to convert hex to byte. \", err)\n    }\n\n    fmt.Printf(\"Decoded Byte Array: %v \\nDecoded String: %s\", decodedByteArray, decodedByteArray)\n}\n</code></pre> <p>Try it</p> <p>Output</p> <pre><code>Hex String:  4c6561726e20476f21\nDecoded Byte Array: [76 101 97 114 110 32 71 111 33]\nDecoded String: Learn Go!\n</code></pre>","tags":["golang","to-the-point","conversion"]},{"location":"2020/convert-hexadecimal-to-decimal-and-decimal-to-hexadecimal-in-golang/","title":"Convert Hexadecimal to Decimal and Decimal to Hexadecimal in Golang","text":"","tags":["conversion","golang"]},{"location":"2020/convert-hexadecimal-to-decimal-and-decimal-to-hexadecimal-in-golang/#decimal-number-system","title":"Decimal Number System","text":"<p>Decimal number system is the standard system for denoting integers and non-integers numbers. This is also known as base 10 number system.</p> <pre><code>0 1 2 3 4 5 6 7 8 9\n</code></pre>","tags":["conversion","golang"]},{"location":"2020/convert-hexadecimal-to-decimal-and-decimal-to-hexadecimal-in-golang/#hexadecimal-number-system","title":"Hexadecimal Number System","text":"<p>Hexadecimal (mostly used as hex) number system use 16 symbols. It is known as base 16 number system, where 10 symbols are same as decimal and value greater than 9 represent as A=10, B=11, C=12, D=13, E=14, F=15.</p> <pre><code>0 1 2 3 4 5 6 7 8 9 A B C D E F\n</code></pre>","tags":["conversion","golang"]},{"location":"2020/convert-hexadecimal-to-decimal-and-decimal-to-hexadecimal-in-golang/#convert-hexadecimal-to-decimal","title":"Convert Hexadecimal to Decimal","text":"<p>Golang package <code>strconv</code> provides <code>ParseInt</code> and <code>ParseUint</code> to convert the string to the number in the respective base. Hexadecimal numbers are commonly use <code>0x</code> or <code>0X</code> in front of the number. It is only to avoid confusion.</p> <p>Syntax</p> <pre><code>func ParseInt(s string, base int, bitSize int) (i int64, err error)\n</code></pre> <pre><code>package main\n\nimport (\n    \"fmt\"\n    \"strconv\"\n)\n\nfunc main() {\n    hexa := \"F1\"\n\n    decimal, err := strconv.ParseInt(hexa, 16, 32)\n\n    if err != nil {\n        fmt.Println(err)\n    }\n\n    fmt.Printf(\"Hexadecimal %s (base16) = Decimal %v (base10)\", hexa, decimal)\n}\n</code></pre> <p>Output</p> <pre><code>Hexadecimal F1 (base16) = Decimal 241 (base10)\n</code></pre> <p>The <code>ParseUint</code> is same as <code>ParseInt</code> but it takes only unsigned integers. To remove the <code>0x</code> or <code>0X</code> from the hex number, you can use slices.</p> <pre><code>hexa := \"0xfc\"\nhexa = hexa[2:]\n</code></pre>","tags":["conversion","golang"]},{"location":"2020/convert-hexadecimal-to-decimal-and-decimal-to-hexadecimal-in-golang/#convert-decimal-to-hexadecimal","title":"Convert Decimal to Hexadecimal","text":"<p>The same <code>strconv</code> package provides <code>FormatInt</code> and <code>FormatUint</code> to convert the decimal number to a respective base number.</p> <pre><code>package main\n\nimport (\n    \"fmt\"\n    \"strconv\"\n)\n\nfunc main() {\n    var decimal int64 = 252\n\n    hexa := strconv.FormatInt(decimal, 16)\n\n    fmt.Printf(\"Decimal %v (base10) = Hexadecimal %s (base16)\", decimal, hexa)\n}\n</code></pre> <p>The <code>FormatUint</code> is same as <code>FormatInt</code> but it takes only unsigned integers.</p> <p>For negative numbers use <code>-</code> minus sign.</p>","tags":["conversion","golang"]},{"location":"2020/convert-string-to-int-and-int-to-string-in-golang/","title":"Convert String to Int and Int to String in Golang","text":"<p>Golang standard library has provided 2 functions Atoi and Itoa to convert string to int and int to string respectively.</p> <p>These 2 functions placed inside the strconv package.</p> <p>Package strconv implements conversions to and from string representations of basic data types.</p>","tags":["golang","to-the-point"]},{"location":"2020/convert-string-to-int-and-int-to-string-in-golang/#string-to-int","title":"String to Int","text":"<p>The <code>strconv.Atoi</code> function takes a string and returns an int and an error.</p> <pre><code>func Atoi(s string) (int, error)\n</code></pre> <p>It will return type <code>int</code> and type <code>int</code> is system dependent. It is 32 bits on the 32-bit system and 64 bits on the 64-bit system.</p> <p>\ud83d\udca1 Use the term ASCII to Int to remember the func name.</p> <pre><code>package main\n\nimport (\n    \"fmt\"\n    \"strconv\"\n)\n\nfunc main() {\n\n    str := \"1234\"\n\n    i, err := strconv.Atoi(str)\n\n    if err != nil {\n        fmt.Println(err)\n    }\n\n    fmt.Printf(\"Type: %T, Value: %v\\n\", i, i)\n\n    // convert int to int64\n    i64 := int64(i)\n    fmt.Printf(\"Type: %T, Value: %v\", i64, i64)\n}\n</code></pre> <p>Output</p> <pre><code>Type: int, Value: 1234\nType: int64, Value: 1234\n</code></pre>","tags":["golang","to-the-point"]},{"location":"2020/convert-string-to-int-and-int-to-string-in-golang/#int-to-string","title":"Int to String","text":"<p>The <code>strconv.Itoa</code> takes <code>int</code> as an argument and returns the <code>string</code>.</p> <pre><code>func Itoa(i int) string\n````\n\nExample:\n\n</code></pre> <p>package main</p> <p>import (     \"fmt\"     \"strconv\" )</p> <p>func main() {     num := 322020</p> <pre><code>str := strconv.Itoa(num)\n\nfmt.Printf(\"Type: %T, Value: %v\", str, str)\n</code></pre> <p>}</p> <pre><code>Output\n\n</code></pre> <p>Type: string, Value: 322020 ```</p>","tags":["golang","to-the-point"]},{"location":"2020/create-an-account-in-brevo/","title":"Create an Account in Brevo","text":"<p>Sendinblue is a SaaS solution for relationship marketing. It offers a cloud-based marketing communication software suite with email marketing, transactional email, marketing automation, customer-relationship management, landing pages, Facebook ads, retargeting ads, SMS marketing, and more.</p> <p>Sendinblue offers 300 mails per day for free account. \ud83d\ude03</p>","tags":["to-the-point","sendinblue"]},{"location":"2020/create-an-account-in-brevo/#getting-started","title":"Getting started","text":"<p>There are only 3 easy steps to create an account in Sendinblue.</p>","tags":["to-the-point","sendinblue"]},{"location":"2020/create-an-account-in-brevo/#step-1","title":"Step 1","text":"<p>Click on the below Get started link. It will redirect you to the signup page.</p> <p></p> <p></p> <p>Click on Sign up free.</p>","tags":["to-the-point","sendinblue"]},{"location":"2020/create-an-account-in-brevo/#step-2","title":"Step 2","text":"<p>Enter your details. For company you can enter your domain name or Self/Individual. It is all up to you.</p> <p></p> <p>This will send a confirmation link to your email address. Open your mail account and click on confirmation link.</p> <p>You can fill the details or can skip for now.</p>","tags":["to-the-point","sendinblue"]},{"location":"2020/create-an-account-in-brevo/#step-3","title":"Step 3","text":"<p>Select the plan. For starters you can select the free plan.</p> <p></p>","tags":["to-the-point","sendinblue"]},{"location":"2020/create-an-account-in-brevo/#dashboard","title":"Dashboard","text":"<p>Once the sign up process, your dashboard will look similar to this. </p>","tags":["to-the-point","sendinblue"]},{"location":"2020/create-an-account-in-brevo/#next-steps","title":"Next Steps","text":"<p>Now, you have a Brevo (formerly Sendinblue). Try these tutorials to send an email using Golang or Nodejs. Tutorials</p>","tags":["to-the-point","sendinblue"]},{"location":"2020/golang-string-replace/","title":"Golang String Replace","text":"<p>Golang package <code>strings</code> provides <code>Replace</code> and <code>ReplaceAll</code> functions to replace the substring in the string.</p>","tags":["golang"]},{"location":"2020/golang-string-replace/#replace","title":"Replace","text":"<p>Syntax</p> <pre><code>func Replace(s, old, new string, n int) string\n</code></pre> <p><code>n</code> is the number of first occurrence of the substring. Replace <code>n</code> first occurrence of the substring.</p> <p>If <code>n &lt; 0</code>, then it will replace all the occurrence.</p> <pre><code>package main\n\nimport (\n    \"fmt\"\n    \"strings\"\n)\n\nfunc main() {\n    str := \"Th0is is an en0c0oded 0000 message\"\n\n    newStr := strings.Replace(str, \"0\", \"\", 3)\n\n    fmt.Printf(\"Original String: %s\\nAfter Replace: %s\\n\", str, newStr)\n\n    // n = -1\n    newStr =  strings.Replace(str, \"0\", \"\", -1)\n    fmt.Printf(\"After Replace with -1: %s\", newStr)\n}\n</code></pre> <p>Output</p> <pre><code>Original String: Th0is is an en0c0oded 0000 message\nAfter Replace: This is an encoded 0000 message\nAfter Replace with -1: This is an encoded  message\n</code></pre>","tags":["golang"]},{"location":"2020/golang-string-replace/#replaceall","title":"ReplaceAll","text":"<p>Syntax</p> <pre><code>func ReplaceAll(s, old, new string) string\n</code></pre> <pre><code>str := \"Th0is is an en0c0oded 0000 message\"\n\nnewStr := strings.ReplaceAll(str, \"0\", \"\")\n\nfmt.Printf(\"Original String: %s\\nAfter Replace: %s\\n\", str, newStr)\n</code></pre> <p>Output</p> <pre><code>Original String: Th0is is an en0c0oded 0000 message\nAfter Replace: This is an encoded  message\n</code></pre>","tags":["golang"]},{"location":"2020/golang-string-replace/#final-words","title":"Final Words","text":"<p>It was always suggested to use <code>ReplaceAll</code> instead of <code>Replace</code> with <code>-1</code>. To support your <code>-1</code> you might need to add a comment. Keep the code self explanatory.</p>","tags":["golang"]},{"location":"2020/how-to-create-a-linux-vm-in-aws/","title":"How to create a Linux VM in AWS?","text":"<p>Create a new aws account.</p> <p>Login to your aws account.  Select services on top left and search EC2 and select it.</p>","tags":["to-the-point","aws","cloud"]},{"location":"2020/how-to-create-a-linux-vm-in-aws/#ec2-dashboard","title":"EC2 Dashboard","text":"<p>Scroll down to Launch Instance section and select Launch Instance.</p> <p></p>","tags":["to-the-point","aws","cloud"]},{"location":"2020/how-to-create-a-linux-vm-in-aws/#configure-instance","title":"Configure Instance","text":"<p>Follow the steps to create a Ubuntu 16.04 VM.</p>","tags":["to-the-point","aws","cloud"]},{"location":"2020/how-to-create-a-linux-vm-in-aws/#step-1-choose-an-amazon-machine-image-ami","title":"Step 1 Choose an Amazon Machine Image (AMI)","text":"<p>Scroll down and select **Ubuntu Server 16.04 LTS (HVM).</p> <p></p>","tags":["to-the-point","aws","cloud"]},{"location":"2020/how-to-create-a-linux-vm-in-aws/#step-2-choose-an-instance-type","title":"Step 2 Choose an Instance Type","text":"<p>Select t2.medium and click Configure Instance Details.</p> <p></p> <p>Select next step till Add Storage.</p>","tags":["to-the-point","aws","cloud"]},{"location":"2020/how-to-create-a-linux-vm-in-aws/#step-3-add-storage","title":"Step 3 Add Storage","text":"<p>By default all the VMs comes with default storage. You can increase the default storage and add an extra disk.</p> <p></p> <p>Select next step till Configure Security Group.</p>","tags":["to-the-point","aws","cloud"]},{"location":"2020/how-to-create-a-linux-vm-in-aws/#step-3-configure-security-group","title":"Step 3 Configure Security Group","text":"<p>Security group allow you restrict the access. As for the learning, keep it simple and open it for everyone.</p> <p>Add 2 rules, SSH and All TCP. Change source to Anywhere.</p> <p></p> <p>Select Review and Launch.</p>","tags":["to-the-point","aws","cloud"]},{"location":"2020/how-to-create-a-linux-vm-in-aws/#step-4-launch","title":"Step 4 Launch","text":"<p>Scroll down and select Launch. </p> <p>Create a new key-pair. It is a public-private key pair. AWS stores the public key while private key is saved by you. While connecting to the instance you need this private key to connect.</p> <p>Give a Key pair a name.</p> <p></p> <p>Select Launch Instance. It will take some time to launch the instance.</p> <p>To check the instance, either you can scroll down and select View Instance or go to EC2 Dashboard and select Instance from the left menu.</p>","tags":["to-the-point","aws","cloud"]},{"location":"2020/how-to-create-a-linux-vm-in-aws/#connect-to-the-instance","title":"Connect to the Instance","text":"<p>Once the instance is ready. Its Instance State is changed to running. Copy the IPv4 Public IP.</p> <p></p>","tags":["to-the-point","aws","cloud"]},{"location":"2020/how-to-create-a-linux-vm-in-aws/#open-the-command-line","title":"Open the command line.","text":"<p>You can use any terminal such as <code>cmd</code>, <code>bash</code>, <code>terminal</code> etc. Open the <code>terminal</code> and go to the directory where you saved the private key.</p> <p>Use the <code>ssh</code> command to connect to the vm.</p> <pre><code>ssh -i path/privatekey.pem ubuntu@ipaddress\n\nssh -i awsdemo.pem ubuntu@13.233.125.251\n</code></pre> <p></p> <p>Note: Don't forget to stop the VM when you are not using. When you restart it, that time the ipaddress will change. Go to Actions &gt; Instance State &gt; Stop.</p> <p></p>","tags":["to-the-point","aws","cloud"]},{"location":"2020/how-to-create-a-linux-vm-in-azure/","title":"How to create a Linux VM in Azure?","text":"<p>Create a new account in Microsoft Azure. For new users, Azure gives free credits for 30 days and many services free of cost upto a limit for 12 months.</p> <p>For students, Microsoft also give away many resources and azure credits. You just have to reach to them by their email.</p> <p>Login to your azure account.</p>","tags":["to-the-point","azure","cloud"]},{"location":"2020/how-to-create-a-linux-vm-in-azure/#step-1-search-for-ubuntu-1604-lts","title":"Step 1 Search for Ubuntu 16.04 LTS","text":"<p>In the search bar, search Ubuntu 16.04 LTS and select create.</p> <p></p>","tags":["to-the-point","azure","cloud"]},{"location":"2020/how-to-create-a-linux-vm-in-azure/#step-2-enter-the-project-details","title":"Step 2 Enter the Project details","text":"<p>In azure, all the related resources must be in a container, this container is known as Resource Group.</p> <p>Create a new resource group demo.</p> <p></p>","tags":["to-the-point","azure","cloud"]},{"location":"2020/how-to-create-a-linux-vm-in-azure/#enter-instance-details","title":"Enter Instance Details","text":"<p>Enter the virtual machine name azure-vm.</p> <p>Change the VM size to Standard B2s.</p> <p></p> <p>The VM's price or default configuration may vary region to region.</p>","tags":["to-the-point","azure","cloud"]},{"location":"2020/how-to-create-a-linux-vm-in-azure/#administrator-account","title":"Administrator account","text":"<p>There are 2 options to login in the VM, using the SSH key or the password.</p> <p>Azure currently supports SSH protocol 2 (SSH-2) RSA public-private key pairs with a minimum length of 2048 bits.</p> <p>Let's setup the SSH key.</p> <p>Open any command line tool. Like bash shell.</p> <p>Use <code>ssh-keygen</code> command to create keys. By default it saves these keys in <code>~/.ssh</code> directory.</p> <pre><code>$ ssh-keygen -m PEM -t rsa -b 4096\nGenerating public/private rsa key pair.\nEnter file in which to save the key (/c/Users/admin/.ssh/id_rsa):\nEnter passphrase (empty for no passphrase):\nEnter same passphrase again:\nYour identification has been saved in /c/Users/admin/.ssh/id_rsa.\nYour public key has been saved in /c/Users/admin/.ssh/id_rsa.pub.\nThe key fingerprint is:\nSHA256:9Hl7Wfo6Et4+QfQ7sKrZr2yaO7Dgb4IVLSIpgsY9ftE admin@LAPTOP-BAVLQDM1\nThe key's randomart image is:\n+---[RSA 4096]----+\n|                 |\n|              .  |\n|o o   o .    . . |\n|+= + + E . . .. .|\n|+ o o + S o ..o o|\n|   . + .   ..o.* |\n|    = . o  .oo+..|\n|   . o o .=oo.+. |\n|      +. **+o+o+.|\n+----[SHA256]-----+\n\n</code></pre> <p>Enter the absolute path where you want to save the keys or skip it and press Enter.</p> <p>Passphrase is required to access the private key while login in the VM.</p> <p>Enter Username <code>azuredemo</code>. Open the <code>id_rsa.pub</code> file. This is the public key. Copy the key and paste it in SSH public key.</p> <p></p> <p>Click Next.</p>","tags":["to-the-point","azure","cloud"]},{"location":"2020/how-to-create-a-linux-vm-in-azure/#step-3-disk","title":"Step 3 Disk","text":"<p>In the Disk section, you can add extra disk space as per your requirement. The Standard B2s VM comes with 32 GB temporary storage.</p> <p></p> <p>For the demo purpose, we don't need extra storage.</p> <p>Click Next to Networking.</p>","tags":["to-the-point","azure","cloud"]},{"location":"2020/how-to-create-a-linux-vm-in-azure/#step-4-networking","title":"Step 4 Networking","text":"<p>In the networking, you can define network connectivity for the virtual machine.</p> <p>For the demo purpose, we are not defining network restriction. Anyone can reach the VM.</p> <p>Create a new Network Security Group.</p> <p>Add an inbound rule where any ip can access the VM.</p> <p></p> <p>Leave the remaining to defaults setting and click Review + create.</p>","tags":["to-the-point","azure","cloud"]},{"location":"2020/how-to-create-a-linux-vm-in-azure/#step-5-review-create","title":"Step 5 Review + create","text":"<p>In the review, it will take some time to validate all the configuration. On pass you can see Validation Passed message.</p> <p></p> <p>Click Create. It will take some time create the virtual machine.</p>","tags":["to-the-point","azure","cloud"]},{"location":"2020/how-to-create-a-linux-vm-in-azure/#step-6-connect-to-the-vm","title":"Step 6 Connect to the VM","text":"<p>Go to the vm overview and click Connect and select SSH.</p> <p>Open the bash or any other command line.</p> <pre><code>ssh -i &lt;private key path&gt; azuredemo@52.172.178.61\n\nssh -i ~/.ssh/id_rsa azuredemo@52.172.178.61\n</code></pre> <p>Enter passphrase.</p> <p></p> <p>You're connected to the VM.</p>","tags":["to-the-point","azure","cloud"]},{"location":"2020/how-to-create-a-linux-vm-in-azure/#step-7-test-it","title":"Step 7 Test it.","text":"<p>Install <code>nginx</code> web server in it.</p> <pre><code>sudo apt-get -y update\nsudo apt-get -y install nginx\n</code></pre> <p>It will take a few seconds to install it. Once it install. Open the browser and enter the VM ip address.</p> <p></p>","tags":["to-the-point","azure","cloud"]},{"location":"2020/how-to-create-a-linux-vm-in-azure/#step-8-stop-the-vm","title":"Step 8 Stop the VM","text":"<p>You can save some money by stopping the VM when you're not using it. Go to VM overview and stop it.</p> <p>Next time when you'll start it only the public ip of the vm will change.</p>","tags":["to-the-point","azure","cloud"]},{"location":"2020/how-to-create-a-linux-vm-in-gcp/","title":"How to Create a Linux VM in GCP","text":"<p>Create a new account on GCP. For new users, GCP credits \\$300 dollars in the account for 12 months and with many free services.</p> <p>Login to your GCP account.</p>","tags":["to-the-point","gcp","cloud"]},{"location":"2020/how-to-create-a-linux-vm-in-gcp/#create-a-new-virtual-machine","title":"Create a new virtual machine","text":"<p>Select Compute Engine from the top left menu.</p> <p>Menu &gt; Compute &gt; Compute Engine</p>","tags":["to-the-point","gcp","cloud"]},{"location":"2020/how-to-create-a-linux-vm-in-gcp/#create-a-new-project","title":"Create a new project","text":"<p>In GCP, a project is a resource manager. All the related resources of a project place inside it. Create a new project demo. It will take some time to create the project.</p> <p></p>","tags":["to-the-point","gcp","cloud"]},{"location":"2020/how-to-create-a-linux-vm-in-gcp/#create-vm-instance","title":"Create VM instance","text":"<p>Click on Create.</p> <p>Take the quickstart it is a small tutorial on how to create the VM.</p> <p></p>","tags":["to-the-point","gcp","cloud"]},{"location":"2020/how-to-create-a-linux-vm-in-gcp/#basic-details","title":"Basic Details","text":"<p>Enter the virtual machine name. <code>gcp-vm</code>.</p> <p>Select the nearest region.</p> <p>Select the Series N1 and machine type n1-standard-1.</p> <p></p>","tags":["to-the-point","gcp","cloud"]},{"location":"2020/how-to-create-a-linux-vm-in-gcp/#select-the-os-and-disk-size","title":"Select the OS and Disk size","text":"<p>Change the OS Image to Ubuntu 16.04 LTS. Increase the disk size to 40GB.</p> <p></p>","tags":["to-the-point","gcp","cloud"]},{"location":"2020/how-to-create-a-linux-vm-in-gcp/#firewall","title":"Firewall","text":"<p>Allow traffic from http and https.</p> <p>This step is optional. If you don't want to manage the private key then you can skip this step. If this is not setup then GCP manages the private key on your behalf. This private key is required to remotely connect to the VM.</p> <p>Click on security.</p> <p>Configure SSH to remotely connect to the vm using the command line.</p> <p>Open the bash or any command line.</p> <p>Use <code>ssh-keygen</code> command to create keys. By default, it saves these keys in <code>~/.ssh</code> directory.</p> <pre><code>$ ssh-keygen -m PEM -t rsa -b 4096\nGenerating public/private rsa key pair.\nEnter file in which to save the key (/c/Users/shubh/.ssh/id_rsa):\nEnter passphrase (empty for no passphrase):\nEnter same passphrase again:\nYour identification has been saved in /c/Users/shubh/.ssh/id_rsa.\nYour public key has been saved in /c/Users/shubh/.ssh/id_rsa.pub.\nThe key fingerprint is:\nSHA256:5C+NIr1JjM8Oy5R6lgCyRm0EXqhHwToQQPYtN7f0qDY shubh@LAPTOP-BAVLQDM1\nThe key's randomart image is:\n+---[RSA 4096]----+\n|=*+o             |\n|+.=..            |\n|o+oo + o.        |\n|*..oo +o+        |\n|o=.    oS.       |\n|...  =.  +       |\n|.  .*E= o o      |\n|   +=B.+ .       |\n|  .oo.*          |\n+----[SHA256]-----+\n\n</code></pre> <p>Enter the absolute path where you want to save the keys or skip it and press Enter.</p> <p>The passphrase is required to access the private key while login in the VM. This step is optional. Passphrase length should be 5 or more. Note it down.</p> <p>Open the <code>id_rsa.pub</code> file. This is the public key. Copy the key and paste it in Enter public SSH key.</p> <p>Remove any leading or trailing spaces while pasting.</p> <p></p> <p>Click Create. It will take some time to create the VM.</p>","tags":["to-the-point","gcp","cloud"]},{"location":"2020/how-to-create-a-linux-vm-in-gcp/#connect-to-the-vm","title":"Connect to the VM","text":"<p>Open the vm. It will show the vm details.</p> <p>If you haven't configured the SSH then you can connect to the VM using the SSH provided by the GCP. From SSH drop-down select the Open in browser window option.</p> <p></p>","tags":["to-the-point","gcp","cloud"]},{"location":"2020/how-to-create-a-linux-vm-in-gcp/#for-ssh-configured","title":"For SSH configured","text":"<p>Scroll down and copy the External IP.</p> <p>Open the bash shell or any command line.</p> <pre><code>ssh -i &lt;absolute-private-key-path&gt; username@vmipaddress\n</code></pre> <p>Username is the key to the SSH.</p> <p></p> <pre><code>ssh -i /c/Users/shubh/.ssh/id_rsa shubh@34.93.244.120\n</code></pre> <p>Enter the passphrase if you have set up it while creating the SSH keys.</p> <p></p>","tags":["to-the-point","gcp","cloud"]},{"location":"2020/how-to-create-a-linux-vm-in-gcp/#test-the-vm","title":"Test the VM","text":"<p>Install the nginx web server.</p> <pre><code>sudo apt-get -y update\nsudo apt-get -y install nginx\n</code></pre> <p>It will take a few seconds to install it. Once it installs. Open the browser and enter the VM IP address.</p> <p></p>","tags":["to-the-point","gcp","cloud"]},{"location":"2020/how-to-create-a-linux-vm-in-gcp/#stop-the-vm","title":"Stop the VM","text":"<p>You can save some money by stopping or deleting the VM when you're not using it.</p> <p>From the top, you can Stop or Delete the VM.</p> <p></p> <p>Next time when you'll start it only the public IP of the vm will change.</p>","tags":["to-the-point","gcp","cloud"]},{"location":"2020/how-to-format-golang-project/","title":"How to Format Golang Project","text":"<p>Golang is a strictly typed language. It tells you hw to write clean code and it takes care of formatting. Unlike many languages where formatting style is opinionated, in Golang it is defined by design.</p>","tags":["golang"]},{"location":"2020/how-to-format-golang-project/#formatting","title":"Formatting","text":"<p>Golang CLI command <code>fmt</code> is used to format the file or files.</p>","tags":["golang"]},{"location":"2020/how-to-format-golang-project/#format-1-file","title":"Format 1 file","text":"<p>Open the terminal in the golang project. Run the below command.</p> <pre><code>go fmt main.go\n</code></pre>","tags":["golang"]},{"location":"2020/how-to-format-golang-project/#format-all-the-files-in-the-folder","title":"Format all the files in the folder","text":"<p>Use <code>./{folder name}</code> notation to give a particular folder.</p> <pre><code>go fmt ./domain\n</code></pre> <p>To format the root folder or where terminal is opened.</p> <pre><code>go fmt .\n\nOR\n\ngo fmt ./\n\nOR\n\ngo fmt\n</code></pre> <p>If you don't pass any argument then it formats the current directory.</p>","tags":["golang"]},{"location":"2020/how-to-format-golang-project/#format-all-the-folders-recursively","title":"Format all the folders recursively","text":"<p>Use <code>./...</code> special syntax to format the complete project.</p> <pre><code>go fmt ./...\n</code></pre>","tags":["golang"]},{"location":"2020/how-to-format-golang-project/#final-words","title":"Final Words","text":"<p>If you're using git then create a <code>makefile</code> or a <code>bash</code> file to format it before committing the code.</p>","tags":["golang"]},{"location":"2020/how-to-login-as-root-in-gcp-linux-vm/","title":"How to Login as Root in GCP Linux Vm","text":"<p>In linux, root user is the most privileged user and it has access to all the commands and files. It is also known as the superuser or administrator.  </p> <p>By default, whenever you login in GCP Linux VM using SSH provided by GCP or using the custom SSH, it login as gcp_username user or as ssh_username respectively.</p> <p>To login as the root user, first set the root password.  </p> <p>To set the root password, use <code>passwd</code> command. This command can be used to change current user's password or if the user is member sudo group then it can change the password of root or other users. </p>","tags":["gcp","cloud","to-the-point"]},{"location":"2020/how-to-login-as-root-in-gcp-linux-vm/#syntax","title":"Syntax","text":"<pre><code>passwd [options] [username]\n</code></pre> <p>Use <code>sudo</code> if it gives permission error.</p> <pre><code>sudo passwd root\n</code></pre> <p>Enter the new password and retype the new password.</p>","tags":["gcp","cloud","to-the-point"]},{"location":"2020/how-to-login-as-root-in-gcp-linux-vm/#login-as-root-user","title":"Login as root user","text":"<p>Use <code>su</code> command to change the user.</p> <pre><code>su root\n</code></pre> <p></p> <p>Learn How to create a linux vm in gcp</p>","tags":["gcp","cloud","to-the-point"]},{"location":"2020/how-to-read-and-write-a-file-in-golang/","title":"How to Read and Write a File in Golang?","text":"<p>In this tutorial, we will learn how to read and write files in the file system using the <code>io/ioutil</code> package.</p>","tags":["golang","to-the-point"]},{"location":"2020/how-to-read-and-write-a-file-in-golang/#write-a-file-using-writefile","title":"Write a file using WriteFile","text":"<p>The <code>WriteFile</code> function takes 3 arguments, filename, data in a byte array, and filemode.</p> <pre><code>func WriteFile(filename string, data []byte, perm os.FileMode) error\n</code></pre> <p>A FileMode represents a file's mode and permission bits. Learn more</p> <pre><code>package main\n\nimport (\n    \"io/ioutil\"\n    \"log\"\n)\n\nfunc main() {\n    // create a byte array of a string\n    data := []byte(\"Hello Gopher!\")\n\n    // write data to a hello file, with 0777 file permission\n    err := ioutil.WriteFile(\"hello.txt\", data, 0777)\n\n    if err != nil {\n        log.Fatalf(\"%v\", err)\n    }\n}\n</code></pre> <p>This will create a new file <code>hello.txt</code> in the current directory.</p>","tags":["golang","to-the-point"]},{"location":"2020/how-to-read-and-write-a-file-in-golang/#file-mode","title":"File mode","text":"<p>Most file systems have methods to assign permissions or access rights to specific users and groups of users. These permissions control the ability of the users to view, change, navigate, and execute the contents of the file system. -- wikipedia</p> <p>A few examples of filemode number notation. </p> <pre><code>0000     no permissions\n0700     read, write, &amp; execute only for owner\n0770     read, write, &amp; execute for owner and group\n0777     read, write, &amp; execute for owner, group and others\n0111     execute\n0222     write\n0333     write &amp; execute\n0444     read\n0555     read &amp; execute\n0666     read &amp; write\n0740     owner can read, write, &amp; execute; group can only read; others have no permissions \n</code></pre>","tags":["golang","to-the-point"]},{"location":"2020/how-to-read-and-write-a-file-in-golang/#read-a-file-using-readfile","title":"Read a file using ReadFile","text":"<p>The <code>ReadFile</code> function reads the file by its filename and returns the file data in array of byte.</p> <pre><code>func ReadFile(filename string) ([]byte, error)\n</code></pre> <p>We will read the above created <code>hello.txt</code> file. Please create a file if it is not created.</p> <pre><code>package main\n\nimport (\n    \"fmt\"\n    \"io/ioutil\"\n    \"log\"\n)\n\nfunc main() {\n\n    // read the hello.txt\n    content, err := ioutil.ReadFile(\"hello.txt\")\n\n    if err != nil {\n        log.Fatalf(\"error while reading %v\", err)\n    }\n\n    // convert the byte into string\n    fmt.Println(string(content))\n}\n</code></pre> <p>Output</p> <pre><code>Hello Gopher!\n</code></pre>","tags":["golang","to-the-point"]},{"location":"2020/how-to-read-and-write-a-file-in-golang/#write-to-an-existing-file","title":"Write to an existing file","text":"","tags":["golang","to-the-point"]},{"location":"2020/how-to-read-and-write-a-file-in-golang/#1-using-ioutil","title":"1.  using ioutil","text":"<p>First using <code>ReadFile</code>, we will read the content and then we will append the new content.  </p> <pre><code>package main\n\nimport (\n    \"io/ioutil\"\n    \"log\"\n)\n\nfunc main() {\n    // Read the content\n    content, err := ioutil.ReadFile(\"hello.txt\")\n\n    if err != nil {\n        log.Fatalf(\"error while reading the file. %v\", err)\n    }\n\n    //  new content\n    newText := []byte(\"\\nAppended text.\")\n\n    // append the content\n    content = append(content, newText...)\n\n    // overwrite the content of hello.txt\n    err = ioutil.WriteFile(\"hello.txt\", content, 0777)\n\n    if err != nil {\n        log.Fatalf(\"error while writing the file. %v\", err)\n    }\n}\n</code></pre> <p>The 3 dots after <code>newText...</code> is a variadic argument. In simple terms it will extract all the array elements. Learn more</p> <p>For Example:</p> <pre><code>if a = [1,2,3,4]\n\nfunc (a...) =&gt; func (1, 2, 3, 4)\n</code></pre>","tags":["golang","to-the-point"]},{"location":"2020/how-to-read-and-write-a-file-in-golang/#2-using-os-package","title":"2. using os package","text":"<p>Using OpenFile in the os package we can open the file and append the data in it.</p> <p>Package os provides a platform-independent interface to operating system functionality. </p> <pre><code>func OpenFile(name string, flag int, perm FileMode) (*File, error)\n</code></pre> <p>The flag parameter defines the operation on the file. The available flags are:</p> <pre><code>    O_RDONLY int = syscall.O_RDONLY // open the file read-only.\n    O_WRONLY int = syscall.O_WRONLY // open the file write-only.\n    O_RDWR   int = syscall.O_RDWR   // open the file read-write.\n    // The remaining values may be or'ed in to control behavior.\n    O_APPEND int = syscall.O_APPEND // append data to the file when writing.\n    O_CREATE int = syscall.O_CREAT  // create a new file if none exists.\n    O_EXCL   int = syscall.O_EXCL   // used with O_CREATE, file must not exist.\n    O_SYNC   int = syscall.O_SYNC   // open for synchronous I/O.\n    O_TRUNC  int = syscall.O_TRUNC  // truncate regular writable file when opened.\n</code></pre> <p>Example</p> <pre><code>package main\n\nimport (\n    \"log\"\n    \"os\"\n)\n\nfunc main() {\n    // If the file doesn't exist, create it, or append to the file\n    file, err := os.OpenFile(\"hello.txt\", os.O_APPEND|os.O_CREATE|os.O_WRONLY, 0777)\n\n    if err != nil {\n        log.Fatalf(\"error while opening the file. %v\", err)\n    }\n\n    // close the file once program execution complete\n    defer file.Close()\n\n    if _, err := file.Write([]byte(\"\\nappended data\")); err != nil {\n        log.Fatalf(\"error while writing the file. %v\", err)\n    }\n}\n\n</code></pre>","tags":["golang","to-the-point"]},{"location":"2020/how-to-read-and-write-a-file-in-golang/#read-and-write-a-json-file","title":"Read and Write a JSON file","text":"<p>Reading and writing the JSON file requires to unmarshal and marshal the data respectively.</p> <p>Learn more about How to use JSON in Golang</p> <p>We are going to create a library object and a book object. The library stores the array of books.</p> <pre><code>type book struct {\n    Name   string\n    Author string\n}\n\ntype library struct {\n    Books []book\n}\n</code></pre> <p>Create books and library</p> <pre><code>    // create some books\n    books := []book{\n        {Name: \"An Introduction to programming in Go\", Author: \"Caleb Doxsey\"},\n        {Name: \"Go in Action\", Author: \"William Kennedy\"},\n        {Name: \"The way to Go\", Author: \"IVO BALBAERT\"},\n    }\n\n    // create the library with books\n    lib := library{Books: books}\n</code></pre>","tags":["golang","to-the-point"]},{"location":"2020/how-to-read-and-write-a-file-in-golang/#write-json","title":"Write JSON","text":"<p>The library is in golang struct format. To convert it JSON we need to marshal it.</p> <pre><code>    // marshal to json or convert to json\n    libJSON, _ := json.Marshal(lib)\n</code></pre> <p>Save it in <code>library.json</code></p> <pre><code>    // write to library.json\n    err := ioutil.WriteFile(\"library.json\", libJSON, 0777)\n\n    if err != nil {\n        log.Fatalf(\"Error while writing a file %v\", err)\n    }\n</code></pre>","tags":["golang","to-the-point"]},{"location":"2020/how-to-read-and-write-a-file-in-golang/#read-json","title":"Read JSON","text":"<p>Read the <code>library.json</code>.</p> <pre><code>    // Read the file\n    content, err := ioutil.ReadFile(\"library.json\")\n\n    if err != nil {\n        log.Fatalf(\"Error while reading a file %v\", err)\n    }\n</code></pre> <p>The data is in byte. Unmarshal it to access the data.</p> <pre><code>    // create a new library\n    var readLib library\n\n    // unmarshal the json to library\n    err = json.Unmarshal(content, &amp;readLib)\n\n    if err != nil {\n        log.Fatalf(\"Error while unmarshal the content  %v\", err)\n    }\n\n    // print all the books\n    for i, book := range readLib.Books {\n\n        fmt.Printf(\"%v| Name: %-40s | Author: %s\\n\", i, book.Name, book.Author)\n    }\n</code></pre> <p>Output</p> <pre><code>0| Name: An Introduction to programming in Go     | Author: Caleb Doxsey\n1| Name: Go in Action                             | Author: William Kennedy\n2| Name: The way to Go                            | Author: IVO BALBAERT\n</code></pre> <p>The output is formatted because we used a little string formatting. In the <code>Printf</code>, we have used <code>%-40s</code>.  <code>40</code> is the width. <code>-</code> align the data to left. Learn more about string formatting.  </p> <p>Width is measured in units of Unicode code points, that is, runes.  For most values, width is the minimum number of runes to output, padding the formatted form with spaces if necessary. </p> <p>The complete code will look like this</p> <pre><code>package main\n\nimport (\n    \"encoding/json\"\n    \"fmt\"\n    \"io/ioutil\"\n    \"log\"\n)\n\ntype book struct {\n    Name   string\n    Author string\n}\n\ntype library struct {\n    Books []book\n}\n\nfunc main() {\n    // create some books\n    books := []book{\n        {Name: \"An Introduction to programming in Go\", Author: \"Caleb Doxsey\"},\n        {Name: \"Go in Action\", Author: \"William Kennedy\"},\n        {Name: \"The way to Go\", Author: \"IVO BALBAERT\"},\n    }\n\n    // create the library with books\n    lib := library{Books: books}\n\n    // marshal to json or convert to json\n    libJSON, _ := json.Marshal(lib)\n\n    // write to library.json\n    err := ioutil.WriteFile(\"library.json\", libJSON, 0777)\n\n    if err != nil {\n        log.Fatalf(\"Error while writing a file %v\", err)\n    }\n\n    // Read the file\n    content, err := ioutil.ReadFile(\"library.json\")\n\n    if err != nil {\n        log.Fatalf(\"Error while reading a file %v\", err)\n    }\n\n    // create a new library\n    var readLib library\n\n    // unmarshal the json to library\n    err = json.Unmarshal(content, &amp;readLib)\n\n    if err != nil {\n        log.Fatalf(\"Error while unmarshal the content  %v\", err)\n    }\n\n    // print all the books\n    for i, book := range readLib.Books {\n\n        fmt.Printf(\"%v| Name: %-40s | Author: %s\\n\", i, book.Name, book.Author)\n    }\n\n}\n</code></pre>","tags":["golang","to-the-point"]},{"location":"2020/how-to-read-and-write-a-file-in-golang/#update-the-existing-json-file","title":"Update the existing JSON file","text":"<p>We will use <code>ioutil</code> for this. First, we will read <code>library.json</code> and then we add a new book in it.</p> <pre><code>package main\n\nimport (\n    \"encoding/json\"\n    \"fmt\"\n    \"io/ioutil\"\n    \"log\"\n)\n\ntype book struct {\n    Name   string\n    Author string\n}\n\ntype library struct {\n    Books []book\n}\n\nfunc main() {\n\n    // Read the file\n    content, err := ioutil.ReadFile(\"library.json\")\n\n    if err != nil {\n        log.Fatalf(\"Error while reading a file %v\", err)\n    }\n\n    // create a new library\n    var readLib library\n\n    // unmarshal the json to library\n    err = json.Unmarshal(content, &amp;readLib)\n\n    if err != nil {\n        log.Fatalf(\"Error while unmarshal the content  %v\", err)\n    }\n\n    // before update\n    fmt.Println(\"Before Update\")\n\n    // print all the books\n    for i, book := range readLib.Books {\n\n        fmt.Printf(\"%v| Name: %-40s | Author: %s\\n\", i, book.Name, book.Author)\n    }\n\n    // Update\n    newBook := book{\n        Name:   \"Go Web Programming\",\n        Author: \"Sau Sheong Chang\",\n    }\n\n    // append the new book\n    readLib.Books = append(readLib.Books, newBook)\n\n    // write the book\n    // marshal to json or convert to json\n    libJSON, err := json.Marshal(readLib)\n\n    if err != nil {\n        log.Fatalf(\"Error while marshal. %v\", err)\n    }\n\n    // write to library.json\n    err = ioutil.WriteFile(\"library.json\", libJSON, 0777)\n\n    if err != nil {\n        log.Fatalf(\"Error while writing a file %v\", err)\n    }\n\n    // After Update\n    fmt.Println(\"After update\")\n\n    // Read the file\n    content, err = ioutil.ReadFile(\"library.json\")\n\n    if err != nil {\n        log.Fatalf(\"Error while reading a file %v\", err)\n    }\n\n    // unmarshal the json to library\n    err = json.Unmarshal(content, &amp;readLib)\n\n    if err != nil {\n        log.Fatalf(\"Error while unmarshal the content  %v\", err)\n    }\n\n    // print all the books\n    for i, book := range readLib.Books {\n        fmt.Printf(\"%v| Name: %-40s | Author: %s\\n\", i, book.Name, book.Author)\n    }\n}\n</code></pre> <p>Output </p> <pre><code>Before Update\n0| Name: An Introduction to programming in Go     | Author: Caleb Doxsey\n1| Name: Go in Action                             | Author: William Kennedy\n2| Name: The way to Go                            | Author: IVO BALBAERT\n\nAfter update\n0| Name: An Introduction to programming in Go     | Author: Caleb Doxsey\n1| Name: Go in Action                             | Author: William Kennedy\n2| Name: The way to Go                            | Author: IVO BALBAERT\n3| Name: Go Web Programming                       | Author: Sau Sheong Chang\n</code></pre>","tags":["golang","to-the-point"]},{"location":"2020/how-to-read-and-write-a-file-in-golang/#references","title":"References","text":"<ul> <li>How to use JSON in Golang?</li> <li>Golang documentation</li> </ul>","tags":["golang","to-the-point"]},{"location":"2020/remove-an-element-from-an-array-using-filter-in-nodejs/","title":"Remove an Element From an Array Using Filter in Nodejs","text":"<p>In nodejs, there are many options to remove an element from an array, one of them is using the filter.</p> <p>filter method on array returns a new array based on the filtering condition.</p> <p>For ex. return the even values in the array</p> <pre><code>const arr1 = [1, 2, 3, 4, 5, 6];\n\nconst arr2 = arr1.filter((n) =&gt; n % 2 === 0);\n\nconsole.log(arr2);\n</code></pre> <p>Output</p> <pre><code>[2, 4, 6]\n</code></pre>","tags":["array"]},{"location":"2020/remove-an-element-from-an-array-using-filter-in-nodejs/#remove-an-element-from-the-array","title":"Remove an element from the array","text":"<p>Remove 5 from the array.</p> <pre><code>const arr1 = [1, 2, 3, 4, 5, 6];\n\nconst arr2 = arr1.filter((n) =&gt; n != 5);\n\nconsole.log(arr1);\nconsole.log(arr2);\n</code></pre> <p>Output</p> <pre><code>arr1: [1, 2, 3, 4, 5, 6];\narr2: [1, 2, 3, 4, 6];\n</code></pre> <p>There are many other ways available in the nodejs to remove an element from the array, this method makes the code look clean and still get the job done.</p>","tags":["array"]},{"location":"2020/string-split-in-golang/","title":"String Split in Golang","text":"<p>Golang library has provided the <code>split</code> function in <code>strings</code> package to split the string by a separator and return the slice of substrings.</p>","tags":["golang","string"]},{"location":"2020/string-split-in-golang/#split","title":"Split","text":"","tags":["golang","string"]},{"location":"2020/string-split-in-golang/#syntax","title":"Syntax","text":"<pre><code>func Split(s, sep string) []string\n</code></pre> <p>Split the string by separator <code>,</code>. Don't forget the white space.</p> <pre><code>package main\n\nimport (\n    \"fmt\"\n    \"strings\"\n)\n\nfunc main() {\n    var greeting string = \"Namaste, India\"\n\n    // separate string using ', '\n    arr := strings.Split(greeting, \", \")\n    fmt.Println(arr)\n}\n</code></pre> <p>Output</p> <pre><code>[Namaste India]\n</code></pre> <p>Try it</p>","tags":["golang","string"]},{"location":"2020/string-split-in-golang/#func-splitafter","title":"func SplitAfter","text":"<p>SplitAfter function split the string after the separator. It is useful when you want to include the sperator.</p> <pre><code>var greeting string = \"Namaste, India\"\n\n// separate string using ', '\narr := strings.SplitAfter(greeting, \", \")\nfmt.Println(arr)\n</code></pre> <p>Output</p> <pre><code>[Namaste,  India]\n</code></pre> <p>There are other Split variation available in golang. Like SplitAfterN, SplitN</p>","tags":["golang","string"]},{"location":"2020/string-split-in-golang/#func-fields","title":"func Fields","text":"<p>Fields split the strings by n consecutive white spaces around a string.</p> <pre><code>var greeting string = \"Happy                 New   Year\"\n// separate string using n white spaces\narr := strings.Fields(greeting)\nfmt.Println(arr)\n</code></pre> <p>Output</p> <pre><code>[Happy New Year]\n</code></pre>","tags":["golang","string"]},{"location":"2020/swapper-in-golang/","title":"How to use Swapper in Golang?","text":"<p>Swapper is a function defined in the reflect package. This function takes a slice and returns a swap function. This swap function takes 2 indexes as arguments and swaps the values at index position in the slice. </p>","tags":["golang","to-the-point"]},{"location":"2020/swapper-in-golang/#function-definition","title":"Function Definition","text":"<pre><code>func Swapper(slice interface{}) func(i, j int)\n</code></pre> <p>Let's try</p> <pre><code>package main\n\nimport (\n    \"fmt\"\n    \"reflect\"\n)\n\nfunc main() {\n    s := []int{1, 2, 3}\n    fmt.Printf(\"Before swap: %v\\n\", s)\n\n    swapF := reflect.Swapper(s)\n\n    swapF(0, 1)\n\n    fmt.Printf(\"After 1 swap: %v\\n\", s)\n\n    swapF(0, 2)\n\n    fmt.Printf(\"After 2 swap: %v\\n\", s)\n}\n</code></pre> <p>Try it</p> <p>Output</p> <pre><code>Before swap: [1 2 3]\nAfter 1 swap: [2 1 3]\nAfter 2 swap: [3 1 2]\n</code></pre> <p>Swapper panics if the provided interface is not a slice.</p> <pre><code>panic: reflect: call of Swapper on &lt;Type&gt; Value\n</code></pre>","tags":["golang","to-the-point"]},{"location":"2020/swapper-in-golang/#reverse-a-slice-using-swapper","title":"Reverse a slice using Swapper","text":"<p>Swap first element with last element, second element with second last and so on.  </p> <pre><code>package main\n\nimport (\n    \"fmt\"\n    \"reflect\"\n)\n\nfunc main() {\n    s := []int{1, 2, 3, 4, 5, 6, 7}\n\n    fmt.Printf(\"Before swap: %v\\n\", s)\n\n    swapF := reflect.Swapper(s)\n\n    for i := 0; i &lt; len(s)/2; i++ {\n        swapF(i, len(s)-1-i)\n    }\n\n    fmt.Printf(\"After swap: %v\\n\", s)\n}\n\n</code></pre> <p>Try it</p> <p>Output</p> <pre><code>Before swap: [1 2 3 4 5 6 7]\nAfter swap: [7 6 5 4 3 2 1]\n</code></pre>","tags":["golang","to-the-point"]},{"location":"2020/swapper-in-golang/#use-swapper-in-bubble-sort","title":"Use Swapper in Bubble sort","text":"<pre><code>package main\n\nimport (\n    \"fmt\"\n    \"reflect\"\n)\n\nfunc main() {\n    s := []int{1, 2, 6, 3, 8, 0, 7, 9, 5, 4}\n\n    fmt.Printf(\"Before swapper: %v\\n\", s)\n\n    swapF := reflect.Swapper(s)\n\n    for i := 0; i &lt; len(s)-1; i++ {\n        for j := i + 1; j &lt; len(s); j++ {\n            if s[i] &gt; s[j] {\n                swapF(i, j)\n            }\n        }\n    }\n\n    fmt.Printf(\"After swapper: %v\\n\", s)\n}\n</code></pre> <p>Output</p> <pre><code>Before swapper: [1 2 6 3 8 0 7 9 5 4]\nAfter swapper: [0 1 2 3 4 5 6 7 8 9]\n</code></pre>","tags":["golang","to-the-point"]},{"location":"2021/create-a-mars-weather-app/","title":"Create a Mars Weather App","text":"<p>MAAS2 is a REST API that provides the latest weather data transmitted by the Curiosity Rover on Mars. This API is built upon the REMS (Rover Environmental Monitoring Station). MAAS2 responds in JSON formatted data.</p> <p>API</p> <p></p>","tags":["to-the-point","2021"]},{"location":"2021/create-a-mars-weather-app/#project-setup","title":"Project Setup","text":"<pre><code>|- mars-weather-app\n    |- index.html\n    |- style.css\n    |- weather.js\n</code></pre>","tags":["to-the-point","2021"]},{"location":"2021/create-a-mars-weather-app/#indexhtml","title":"index.html","text":"<p>Create a <code>index.html</code> and paste the code.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"UTF-8\" /&gt;\n    &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" /&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /&gt;\n\n    &lt;!-- Compiled and minified CSS --&gt;\n    &lt;link\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css\"\n    /&gt;\n    &lt;link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" /&gt;\n    &lt;link\n      href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n      rel=\"stylesheet\"\n    /&gt;\n\n    &lt;link rel=\"stylesheet\" href=\"./style.css\" /&gt;\n    &lt;!-- Compiled and minified JavaScript --&gt;\n    &lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"./weather.js\"&gt;&lt;/script&gt;\n    &lt;script&gt;\n      // onload render the previous tasks\n      window.addEventListener(\"load\", getWeatherReport);\n    &lt;/script&gt;\n    &lt;title&gt;Mars Weather&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;div class=\"mars-header\"&gt;\n      &lt;span&gt;\n        &lt;i class=\"large material-icons\"&gt;ac_unit&lt;/i&gt;\n        &lt;header&gt;Mars Weather&lt;/header&gt;&lt;/span\n      &gt;\n    &lt;/div&gt;\n    &lt;main&gt;\n      &lt;div class=\"row\"&gt;\n        &lt;div class=\"info\"&gt;\n          &lt;div&gt;\n            &lt;table&gt;\n              &lt;tbody&gt;\n                &lt;tr&gt;\n                  &lt;td&gt;\n                    &lt;i class=\"material-icons\"&gt;access_time&lt;/i&gt; Terrestrial Date\n                  &lt;/td&gt;\n                  &lt;td id=\"terrestrial_date\"&gt;&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                  &lt;td&gt;&lt;i class=\"material-icons\"&gt;whatshot&lt;/i&gt; temp&lt;/td&gt;\n                  &lt;td id=\"temp\"&gt;&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                  &lt;td&gt;&lt;i class=\"material-icons\"&gt;cloud_queue&lt;/i&gt; weather&lt;/td&gt;\n                  &lt;td id=\"weather\"&gt;&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                  &lt;td&gt;&lt;i class=\"material-icons\"&gt;looks&lt;/i&gt; season&lt;/td&gt;\n                  &lt;td id=\"season\"&gt;&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                  &lt;td&gt;&lt;i class=\"material-icons\"&gt;brightness_5&lt;/i&gt; sunrise&lt;/td&gt;\n                  &lt;td id=\"sunrise\"&gt;&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                  &lt;td&gt;&lt;i class=\"material-icons\"&gt;brightness_7&lt;/i&gt; sunset&lt;/td&gt;\n                  &lt;td id=\"sunset\"&gt;&lt;/td&gt;\n                &lt;/tr&gt;\n              &lt;/tbody&gt;\n            &lt;/table&gt;\n          &lt;/div&gt;\n        &lt;/div&gt;\n      &lt;/div&gt;\n    &lt;/main&gt;\n    &lt;footer&gt;\n      &lt;div class=\"footer-copyright\"&gt;\n        &lt;div&gt;\n          Made with &lt;span style=\"color: red\"&gt;\u2764\ufe0f&lt;/span&gt; by\n          &lt;a href=\"https://schadokar.dev\"&gt;schadokar&lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div&gt;\n          Ingredients &lt;span&gt; \ud83e\uddea&lt;/span&gt; html, css and\n          &lt;a href=\"https://materializecss.com/\"&gt;material ui&lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div&gt;\n          &lt;a href=\"https://github.com/day-to-day-coding/mars-weather-app\"\n            &gt;&lt;i class=\"material-icons\"&gt;code&lt;/i&gt;&lt;/a\n          &gt;\n        &lt;/div&gt;\n      &lt;/div&gt;\n    &lt;/footer&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>","tags":["to-the-point","2021"]},{"location":"2021/create-a-mars-weather-app/#stylecss","title":"style.css","text":"<p>Create a <code>style.css</code> and paste the code.</p> <pre><code>body {\n  background-color: white;\n  background-repeat: no-repeat;\n  flex-direction: column;\n  padding-top: 2rem;\n  padding-bottom: 2rem;\n  padding-left: 4rem;\n  padding-right: 4rem;\n  background-size: cover;\n}\n\nheader {\n  font-size: xx-large;\n  margin-bottom: 50px;\n}\n\nmain {\n  flex: 1 0 auto;\n}\n\n.vertical-divider {\n  border-left: 1px solid gray;\n}\n\n.page-footer .footer-copyright {\n  background-color: white;\n}\n\nfooter {\n  margin-top: 7rem;\n}\n</code></pre>","tags":["to-the-point","2021"]},{"location":"2021/create-a-mars-weather-app/#weatherjs","title":"weather.js","text":"<p>Create a <code>weather.js</code> and paste the code.</p> <pre><code>function getWeatherReport(city) {\n  var requestOptions = {\n    method: \"GET\",\n    redirect: \"follow\",\n  };\n\n  fetch(`https://api.maas2.apollorion.com/`, requestOptions)\n    .then((response) =&gt; response.json())\n    .then((result) =&gt; {\n      document.getElementById(\"terrestrial_date\").innerHTML =\n        result.terrestrial_date;\n      document.getElementById(\n        \"temp\"\n      ).innerHTML = `max ${result.max_temp} &amp;#8451;, min ${result.min_temp} &amp;#8451;`;\n      document.getElementById(\"weather\").innerHTML = result.atmo_opacity;\n      document.getElementById(\"season\").innerHTML = result.season;\n      document.getElementById(\"sunrise\").innerHTML = result.sunrise;\n      document.getElementById(\"sunset\").innerHTML = result.sunset;\n    })\n    .catch((error) =&gt; console.log(\"error\", error));\n}\n</code></pre>","tags":["to-the-point","2021"]},{"location":"2021/create-a-mars-weather-app/#run","title":"Run","text":"<p>Open the <code>index.html</code> in the browser and test it.</p> <p>To run it as server, install <code>serve</code> using <code>npm install --global serve</code>. Install nodejs first to run <code>npm</code> command.</p> <p>Open the terminal or cmd in the project and run <code>serve</code>.</p> <p>This will start a server at <code>localhost:5000</code> and serve <code>index.html</code>.</p>","tags":["to-the-point","2021"]},{"location":"2021/create-a-mars-weather-app/#host-it","title":"Host it","text":"<p>You can host it on GitHub Pages.</p> <p>Create a <code>html-weather-app</code> repository on the GitHub. You can name it anything.</p> <p>Open the terminal or cmd in the project and instantiate <code>git init</code>.</p> <p>Stage and commit the code.</p> <pre><code>git init\ngit add .\ngit commit -m 'weather app is complete'\n</code></pre> <p>This is a static web app due to which your api key is visible to everyone. So either keep the account in free tier or remove/delete the API key from the <code>weather.js</code> and then push it. Or you can delete the API key in openweathermap account.</p> <p>Open GitHub repo and copy the repo url. Add it as <code>origin</code> and push the code to the GitHub.</p> <pre><code>git remote add origin https://github.com/&lt;Your username&gt;/&lt;repo name&gt;.git\ngit branch -M main\ngit push -u origin main\n</code></pre> <p>Open the GitHub repo settings and go to <code>pages</code>.</p> <p>Under <code>Source</code>, select the <code>main</code> branch, <code>/root</code> folder and save it.</p> <p>The app is now live at</p> <pre><code>https://&lt;Your Username&gt;.github.io/&lt;your repo name&gt;/\n</code></pre>","tags":["to-the-point","2021"]},{"location":"2021/how-to-add-and-remove-a-property-of-an-object-in-javascript/","title":"How to Add and Remove a Property of an Object in Javascript","text":"<p>Javascript object is a collection of properties and a property is a key-value pair. </p> <p>The value can be anything like any data type, object and even a function. When a value is a function then it is known as method.</p>","tags":["javascript","to-the-point","2021"]},{"location":"2021/how-to-add-and-remove-a-property-of-an-object-in-javascript/#add-a-property-to-an-object","title":"Add a property to an object","text":"<pre><code>const obj = {};\n// syntax 1\nobj.property1 = \"first property\"\n// or syntax 2\nobj.property2 = \"second property\"\n</code></pre>","tags":["javascript","to-the-point","2021"]},{"location":"2021/how-to-add-and-remove-a-property-of-an-object-in-javascript/#remove-or-delete-a-property-of-an-object","title":"Remove or delete a property of an  Object","text":"<p>Use <code>delete</code> keyword to remove or delete a property.</p> <pre><code>const obj = {\n    \"property1\": \"first property\",\n    \"property2\": \"second property\",\n    \"property3\": \"third property\"\n};\n\n// delete second property\ndelete obj.property2;\n// delete third property\ndelete obj[\"property3\"];\n</code></pre>","tags":["javascript","to-the-point","2021"]},{"location":"2021/how-to-add-rss-to-hugo-website/","title":"How to Add RSS feed to Hugo Website","text":"","tags":["hugo","2021","to-the-point"]},{"location":"2021/how-to-add-rss-to-hugo-website/#what-is-rss-feed","title":"What is RSS feed?","text":"<p>How do you keep yourself updated with your favorite websites or bloggers? By visiting their websites or subscribing to the newsletter. </p> <p>Using rss feed you can get all the updates of different websites at 1 place, provided that website should have rss feed enabled in it. </p> <p>If it is enabled then you can copy the RSS feed link and paste it any RSS reader application.</p> <p>RSS feed supports xml format.</p> <p>RSS (RDF Site Summary or Really Simple Syndication)[2] is a web feed[3] that allows users and applications to access updates to websites in a standardized, computer-readable format. These feeds can, for example, allow a user to keep track of many different websites in a single news aggregator. - Wikipedia</p>","tags":["hugo","2021","to-the-point"]},{"location":"2021/how-to-add-rss-to-hugo-website/#add-rss-feed-to-hugo-website","title":"Add RSS feed to Hugo Website","text":"<p>By default, hugo provides its own RSS 2.0 template. </p> <p>Hugo RSS documentation might be little confusing.</p> <p>In short, the hugo RSS feed is available at <code>index.xml</code>. You don't need to set it up or configure anything.</p> <p>This blog is powered by Hugo and RSS feed is available on different levels of the website.</p> <p>For Example: <code>https://schadokar.dev</code> is the root level. The root level of RSS feed is <code>https://schadokar.dev/index.xml</code>.</p> <p>The root level will notify for any update in the website.</p> <p>RSS feed of only <code>posts</code> is <code>https://schadokar.dev/posts/index.xml</code>.</p> <p>In the same way for other pages.</p> <p>You can also create your own RSS template. </p>","tags":["hugo","2021","to-the-point"]},{"location":"2021/how-to-check-if-object-is-empty-in-javascript/","title":"How to Check if Object Is Empty in Javascript","text":"<p>There are many ways to check if an Object is empty or not. But in this post we will document only which is recommended and has fast execution compared to others.</p>","tags":["javascript","to-the-point","2021"]},{"location":"2021/how-to-check-if-object-is-empty-in-javascript/#for-loop","title":"for loop","text":"<p>Iteration is best way to check if Object is empty or not and it will work on all the browsers.</p> <pre><code>const obj = {};\n\nfor(let key in obj) {\n    if(obj.hasOwnProperty(key)) {\n        return false;\n    };\n};\nreturn true;\n</code></pre>","tags":["javascript","to-the-point","2021"]},{"location":"2021/how-to-check-if-object-is-empty-in-javascript/#using-objectkeys","title":"Using Object.keys","text":"<pre><code>obj // check if obj is not null or undefined\n&amp;&amp; Object.keys(obj).length === 0 // check if object has no keys\n&amp;&amp; obj.constructor === Object // check if constructor of object is of Object type\n</code></pre> <p>In Javascript, new keyword creates a new Object. For Example. new String() is also an Object but its constructor type is string.</p> <pre><code>const str = new String(); // typeof str = Object\nstr.constructor(); // string\n</code></pre> <p>Snippet</p> <pre><code>const obj = {};\n// check if object is empty\nif(obj &amp;&amp; Object.keys(obj).length === 0 &amp;&amp; obj.constructor === Object) {\n    return true;\n};\nreturn false;\n</code></pre>","tags":["javascript","to-the-point","2021"]},{"location":"2021/how-to-check-if-object-is-empty-in-javascript/#references","title":"References","text":"<p>Checkout these resources for more options</p> <ul> <li>Stackoverflow answer 1</li> <li>Stackoverflow answer 2 - Performance</li> <li>Samantha Ming Tidbits</li> </ul>","tags":["javascript","to-the-point","2021"]},{"location":"2021/how-to-convert-an-array-to-a-string/","title":"How to Convert an Array to a String in Javascript","text":"<p>This post will answer the below questions</p> <ul> <li>How to convert an array to a string?</li> <li>How to convert an array to a string with a character in between the elements?</li> </ul> <p>Use <code>join</code> method to convert the array to a string with a separator. </p>","tags":["javascript","to-the-point"]},{"location":"2021/how-to-convert-an-array-to-a-string/#syntax","title":"Syntax","text":"<pre><code>array.join(separator(optional))\n</code></pre> <p><code>,</code>(comma) is the default separator. Separator is a string not a character. <code>-</code> or <code>namaste</code> both are valid separator.</p> <pre><code>const dateArray = [\"Sun\", 11, \"Apr\", 2021, \"12:59:48\", \"GMT\"];\nconst dateString = dateArray.join();\nconst dateStringHyphen = dateArray.join(\"-\");\nconsole.log(dateString);\nconsole.log(dateStringHyphen);\n</code></pre>","tags":["javascript","to-the-point"]},{"location":"2021/how-to-convert-an-array-to-a-string/#output","title":"Output","text":"<pre><code>Sun,11,Apr,2021,12:59:48,GMT\nSun-11-Apr-2021-12:59:48-GMT\n</code></pre>","tags":["javascript","to-the-point"]},{"location":"2021/how-to-convert-nested-arrays-into-1d-array-in-javascript/","title":"How to Convert Nested Arrays Into 1d Array in Javascript","text":"<p>In ES2019, <code>Array.prototype.flat</code> method was introduced which converts the multi-dimensional array to one-dimensional array upto a defined nested depth.</p> <p>For Example:</p> <pre><code>const nestedArr = [\"e1\", [\"e2\", \"e3\", [\"e4\", \"e5\", [\"e6\", \"e7\"]]]];\n// default depth is 1 means it will flated only 1 nested array\nnestedArr.flat(); // [\"e1\", \"e2\", \"e3\", [\"e4\", \"e5\", [\"e6\", \"e7\"]]]\n\n// depth = 2\nnestedArr.flat(2); // [\"e1\", \"e2\", \"e3\", \"e4\", \"e5\", [\"e6\", \"e7\"]]\n\n// for all the way down to the last nested array use Infinity\nnestedArr.flat(Infinity); // [\"e1\", \"e2\", \"e3\", \"e4\", \"e5\", \"e6\", \"e7\"]\n</code></pre> <p>The <code>flat</code> method is not supported on old version of many browsers.</p> <p>Checkout supported versions here.</p>","tags":["javscript","to-the-point","2021"]},{"location":"2021/how-to-get-the-length-of-an-object-in-javascript/","title":"How to Get the Length of an Object in Javascript","text":"<p>The Javascript Object is a collection of key value pair.</p> <pre><code>const obj = {\n    key1: value1,\n    key2: value2,\n    length: 10\n};\n\nObject.keys(obj).length // 3 [\"key1\", \"key2\", \"length\"]\nobj.length // 10\n</code></pre> <p>The <code>Object.keys(obj)</code> returns the array of the keys of the object.</p> <p><code>.length</code> is the function available of array.</p> <p>If you will try to use <code>.length</code> property then object will find <code>length</code> property or key in the object.</p>","tags":["javascript","to-the-point","2021"]},{"location":"2021/how-to-get-the-length-of-an-object-in-javascript/#get-object-length-function","title":"Get object length function","text":"<p>Create a object length function.</p> <pre><code>const obj = {\n    key1: value1,\n    key2: value2,\n    length: 10\n};\n\nconst len(obj) {\n    return Object.keys(obj).length;\n};\n\nlen(obj); // 3\n</code></pre>","tags":["javascript","to-the-point","2021"]},{"location":"2021/how-to-remove-consecutive-characters-from-a-string/","title":"How to Remove Consecutive Characters From a String","text":"","tags":["data structures","javascript"]},{"location":"2021/how-to-remove-consecutive-characters-from-a-string/#problem-statement","title":"Problem Statement","text":"<p>Remove n consecutive characters from a string and return the final string.</p> <p>For example:</p> <pre><code>Input String: abccdeeef\n\nOutput String: abdf\n</code></pre>","tags":["data structures","javascript"]},{"location":"2021/how-to-remove-consecutive-characters-from-a-string/#solution","title":"Solution","text":"<pre><code>const str = \"abccdeeef\";\n//-----------012345678\nlet finalStr = \"\";\n\nlet isConsecutive = false;\n\nfor (let i = 0; i &lt; str.length - 1; i++) {\n  // check if characters are consecutive\n  if (str[i] === str[i + 1]) {\n    isConsecutive = true;\n  } else {\n    // check if the last character was consecutive\n    if (!isConsecutive) {\n      // add the character to new string\n      finalStr += str[i];\n    }\n    // reset the flag\n    isConsecutive = false;\n  }\n}\n\n// check for last character\nif (!isConsecutive) {\n  finalStr += str[str.length - 1];\n}\n\nconsole.log(finalStr);\n</code></pre> <p>Output</p> <pre><code>abdf;\n</code></pre>","tags":["data structures","javascript"]},{"location":"2021/how-to-remove-consecutive-characters-from-a-string/#final-words","title":"Final words","text":"<p>This is one of very common interview question can be asked in the interview. The solution is easy but in interviews due to time frame, interviewee can get confused. Always go for easy solution and then work on complexity.</p>","tags":["data structures","javascript"]},{"location":"2021/how-to-remove-falsy-values-from-an-array-in-javascript/","title":"How to Remove Falsy Values From an Array in Javascript","text":"","tags":["javascript","2021","to-the-point"]},{"location":"2021/how-to-remove-falsy-values-from-an-array-in-javascript/#falsy-values-in-the-javascript","title":"Falsy Values in the Javascript","text":"<p>In Javascript, in the context of Boolean all the values are either <code>true</code> or <code>false</code>.</p> <p>For Example</p> Boolean Values True 1,2,3, \"any string\", {} , true, 1.0, 'false', Infinity False 0, -0, false, 0n, \"\", '',``, null, undefined, NaN <p>'false' is a string.</p>","tags":["javascript","2021","to-the-point"]},{"location":"2021/how-to-remove-falsy-values-from-an-array-in-javascript/#demo","title":"Demo","text":"<p>Use <code>filter</code> to remove all the falsy values from an array.</p> <pre><code>const arr = [\"hi\", '', false, 123, {}, [], \"false\", 0];\n// falsy values are '' false 0\nconst newArr = arr.filter(Boolean); // [\"hi\", 123, {}, [], \"false\"]\n</code></pre> <p><code>filter</code> returns a new array instead of updating the original array.</p>","tags":["javascript","2021","to-the-point"]},{"location":"2021/how-to-sort-an-array-of-int-float-and-string-in-golang/","title":"How to Sort an Array of Int Float and String in Golang","text":"<p>The golang provides a <code>sort</code> package to sort slices of primitives types and user-defined.</p>","tags":["golang","to-the-point","2021"]},{"location":"2021/how-to-sort-an-array-of-int-float-and-string-in-golang/#sort-ints","title":"Sort Ints","text":"<pre><code>intArr := []int{23, 12, 11, 90}\n// Sort in Increasing Order\nsort.Ints(intArr) // [11, 12, 23, 90]\n// Sort in Decreasing Order\nsort.Sort(sort.Reverse(sort.IntSlice(intArr))) // [90, 23, 12, 11]\n</code></pre>","tags":["golang","to-the-point","2021"]},{"location":"2021/how-to-sort-an-array-of-int-float-and-string-in-golang/#sort-float","title":"Sort Float","text":"<pre><code>floatArr := []float64{23.1, 12.1, 111.1, 91.0}\n// Sort in Increasing Order\nsort.Float64s(floatArr) // [12.1 23.1 91 111.1]\n// Sort in Decreasing Order\nsort.Sort(sort.Reverse(sort.Float64Slice(floatArr))) // [111.1 91 23.1 12.1]\n</code></pre> <p>Not-a-number (NaN) values are ordered before other values.</p> <pre><code>floatArr := []float64{23.1, 12.1, math.NaN(), 111.1, 91.0}\n// Sort in Increasing Order\nsort.Float64s(floatArr) // [NaN 12.1 23.1 91 111.1]\n// Sort in Decreasing Order\nsort.Sort(sort.Reverse(sort.Float64Slice(floatArr))) // [111.1 91 23.1 12.1 NaN]\n</code></pre>","tags":["golang","to-the-point","2021"]},{"location":"2021/how-to-sort-an-array-of-int-float-and-string-in-golang/#sort-string","title":"Sort String","text":"<pre><code>strArr := []string{\"Banana\", \"Apple\", \"Orange\"}\n// Sort in Increasing Order\nsort.Strings(strArr) // [Apple Banana Orange]\n// Sort in Decreasing Order\nsort.Sort(sort.Reverse(sort.StringSlice(strArr))) // [Orange Banana Apple]\n</code></pre>","tags":["golang","to-the-point","2021"]},{"location":"2021/how-to-sort-an-array-of-objects-in-javascript/","title":"How to Sort an Array of Objects in Javascript","text":"<p>Using the <code>sort</code> method, we can sort the array of objects by the property of the object.</p> <p>The <code>sort</code> method will change the <code>persons</code> array instead of creating a copy of it. <code>sort</code> works by reference not by value.</p> <pre><code>const persons = [\n    {name: \"John\", age: 35},\n    {name: \"Steve\", age: 24},\n    {name: \"Ben\", age: 49}\n]\n</code></pre>","tags":["to-the-point","javascript"]},{"location":"2021/how-to-sort-an-array-of-objects-in-javascript/#syntax","title":"Syntax","text":"<pre><code>array.sort(function (arg1, arg2) {\n    // arg1 is smaller than arg2 \n    // example: (2-4) = negative (less than 0)\n    if(arg1 &lt; arg2) {\n        return -1; // in ascending order\n        // return 1; // in descening order\n    } \n    // arg1 is larger than arg2\n    // example: (6-2) = positive (greater than 0)\n    else if (arg1 &gt; arg2) {\n        return 1; // in ascending order\n         // return -1; // in descening order\n    } \n    // arg1 is equal to arg2\n    return 0;\n} )\n</code></pre>","tags":["to-the-point","javascript"]},{"location":"2021/how-to-sort-an-array-of-objects-in-javascript/#sort-the-object-by-name","title":"Sort the object by name","text":"<pre><code>persons.sort((p1, p2) =&gt; {\n    // to ignore the case sensitivity\n    const arg1 = p1.name.toLowerCase();\n    const arg2 = p2.name.toLowerCase();\n    if(arg1 &lt; arg2) {\n        return -1;\n    } else if (arg1 &gt; arg2) {\n        return 1;\n    }\n    return 0;\n});\nconsole.log(persons);\n</code></pre>","tags":["to-the-point","javascript"]},{"location":"2021/how-to-sort-an-array-of-objects-in-javascript/#output","title":"Output","text":"<pre><code>[\n    {\"name\":\"Ben\",\"age\":49},\n    {\"name\":\"John\",\"age\":35},\n    {\"name\":\"Steve\",\"age\":24}\n]\n</code></pre> <p>We have used arrow <code>=&gt;</code> function expression include in ES2015 instead of function. Both are correct.</p>","tags":["to-the-point","javascript"]},{"location":"2021/how-to-sort-an-array-of-objects-in-javascript/#sort-the-object-by-age","title":"Sort the object by age","text":"<pre><code>persons.sort((arg1, arg2) =&gt; {\n    return arg1.age - arg2.age; // for ascending order\n    // return arg2.age - arg1.age; // for decending order\n})\n// Or use the short format\npersons.sort((arg1, arg2) =&gt; arg1.age - arg2.age;)\n\nconsole.log(persons);\n</code></pre>","tags":["to-the-point","javascript"]},{"location":"2021/how-to-sort-an-array-of-objects-in-javascript/#output_1","title":"Output","text":"<pre><code>[\n    {\"name\":\"Steve\",\"age\":24},\n    {\"name\":\"John\",\"age\":35},\n    {\"name\":\"Ben\",\"age\":49}\n]\n</code></pre>","tags":["to-the-point","javascript"]}]}